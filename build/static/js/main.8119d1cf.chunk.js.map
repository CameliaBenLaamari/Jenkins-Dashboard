{"version":3,"sources":["jenkins.js","components/Login.js","components/Dashboard.js","components/Footer.js","components/Sidebar.js","components/Home.js","components/App.js","reportWebVitals.js","index.js"],"names":["myHeaders","Headers","fetchData","username","password","append","btoa","fetch","method","headers","redirect","then","response","json","result","localStorage","setItem","JSON","stringify","catch","error","console","log","Login","navigate","useNavigate","useState","setUsername","setPassword","loading","setLoading","a","className","src","alt","style","width","marginLeft","marginRight","marginBottom","TextField","label","size","onChange","e","preventDefault","target","value","Button","disabled","onClick","data","parse","getItem","WidgetOne","listJobs","WidgetTwo","jobs","i","length","initialPositions","col","colSpan","rowSpan","Dashboard","positions","setPositions","widgets","header","body","id","columns","rowHeight","gap","rows","items","onReposition","Footer","Sidebar","Home","App","backgroundColor","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8119d1cf.chunk.js","sourcesContent":["var myHeaders = new Headers();\r\n\r\nfunction fetchData(username, password) {\r\n\r\n    // Login using the basic Auth credentials\r\n    myHeaders.append(\"Authorization\", \"Basic \" + btoa(username + \":\" + password));\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var requestOptions = {\r\n        method: 'GET',\r\n        headers: myHeaders,\r\n        redirect: 'follow',\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/jenkins/api/json\", requestOptions)\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            // Store the data fetched by the Jenkins API into the browser's local storage\r\n            localStorage.setItem('userData', JSON.stringify(result));\r\n        })\r\n        .catch(error => console.log('error', error));\r\n\r\n}\r\n\r\nexport default fetchData","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Button, TextField } from '@mui/material'\r\nimport fetchData from '../jenkins';\r\n\r\nfunction Login() {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function handleUsername(e) {\r\n        setLoading(false)\r\n        e.preventDefault()\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    function handlePassword(e) {\r\n        setLoading(false)\r\n        e.preventDefault()\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    async function submit() {\r\n        fetchData(username, password);\r\n        navigate('/home');\r\n    }\r\n\r\n    return (\r\n        <div className=\"box\">\r\n            <img src=\"jenkins.png\" alt=\"Jenkins Logo\" style={{ width: '7vh', marginLeft: 'auto', marginRight: 'auto', marginBottom: '3vh' }} />\r\n            <TextField label=\"Username\" size=\"small\" onChange={handleUsername} className=\"input\" />\r\n            <TextField label=\"Password\" size=\"small\" onChange={handlePassword} className=\"input\" />\r\n            <Button disabled={loading} onClick={submit}>Sign In</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport \"@progress/kendo-theme-material/dist/all.css\";\r\nimport { TileLayout } from \"@progress/kendo-react-layout\";\r\nimport { useState } from \"react\";\r\n\r\n// Retrieve the Jenkins data from the browser's local storage and parse it into JSON format\r\nconst data = JSON.parse(localStorage.getItem('userData'));\r\n\r\nconst WidgetOne = () => <div>{listJobs(data[\"jobs\"])}</div>;\r\nconst WidgetTwo = () => <div>{data[\"numExecutors\"]}</div>;\r\n\r\nfunction listJobs(jobs) {\r\n    for (var i = 0; i < jobs.length - 1; i++) {\r\n        return (<div>{jobs[i]['name']}</div>);\r\n    }\r\n}\r\n\r\nconst initialPositions = [\r\n    {\r\n        col: 1,\r\n        colSpan: 2,\r\n        rowSpan: 2,\r\n    },\r\n    {\r\n        col: 3,\r\n        colSpan: 1,\r\n        rowSpan: 1,\r\n    },\r\n];\r\n\r\nfunction Dashboard() {\r\n\r\n    const [positions, setPositions] = useState(initialPositions);\r\n\r\n    const widgets = [\r\n        {\r\n            header: \"Jobs\",\r\n            body: <WidgetOne />,\r\n        },\r\n        {\r\n            header: \"Number of Executors\",\r\n            body: <WidgetTwo />,\r\n        },\r\n    ];\r\n\r\n    const handleReposition = e => {\r\n        setPositions(e.value);\r\n    };\r\n\r\n    return (\r\n        <div id=\"dashboard\">\r\n            <h1>Jenkins Dashboard</h1>\r\n            <h2>By Ameni Elhassen & Camelia Ben Laamari</h2>\r\n            <TileLayout\r\n                className=\"tileLayout\"\r\n                columns={4}\r\n                rowHeight={255}\r\n                gap={{ rows: 10, columns: 10 }}\r\n                positions={positions}\r\n                items={widgets}\r\n                onReposition={handleReposition}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div id=\"footer\">\r\n            &copy; 2021 SUP'COM. All Rights Reserved.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nfunction Sidebar() {\r\n    return (\r\n        <div id=\"sidebar\">\r\n            <div className=\"column\">\r\n                <img src=\"jenkins.png\" alt=\"Jenkins Logo\" className=\"sidebar-logo\" />\r\n                <ul>\r\n                    <li>Text</li>\r\n                    <li>Text</li>\r\n                    <li>Text</li>\r\n                    <li>Text</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport Dashboard from './Dashboard'\r\nimport Footer from './Footer'\r\nimport Sidebar from './Sidebar'\r\n\r\nfunction Home() {\r\n    return (\r\n        <div>\r\n            <Sidebar />\r\n            <Dashboard />\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import '../main.css';\r\nimport Login from './Login';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'\r\nimport Home from './Home';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div style={{ backgroundColor: 'transparent' }}>\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path=\"/\" element={<Login />} />\r\n          <Route path=\"/home\" element={<Home />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}